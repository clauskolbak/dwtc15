@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>

@*
    This is a very generic recommendation template. It only serves as an example.

    If set, it will use the recommendations url computed by Dynamicweb (RecommendationsUrl).
    Otherwise it will use RecommendationsUrlBase to build a recommendations url based on the products shown on the page (with data-product-id attributes).

    Recommendations will be rendered using a custom template (see #dynamicweb-recommendations-template), but this is not really a good way to do it as the raw product data does not contain information on discounts and the like
*@

@using System.Web

@{
    var elementId = "recommendation-" + GetValue("ElementId");
    var useRecommendationContext = false;
    var recommendationsUrl = GetString("RecommendationsUrl");
    var recommendationsUrlBase = GetString("RecommendationsUrlBase");
    if (string.IsNullOrEmpty(recommendationsUrl))
    {
        useRecommendationContext = true;
        recommendationsUrl = recommendationsUrlBase;
    }
}

@if (!string.IsNullOrEmpty(recommendationsUrl))
{
    <style>
        .recommendations {
            border: solid 1px #aaa;
            margin: 1em 0;
            padding: 1em;
        }
    </style>
    <section class="recommendations" id="@elementId">
        <header><h1>@Translate("Recommendations")</h1></header>

        <div class="row content"></div>

        <script type="text/dynamicweb-ecom-template" id="dynamicweb-recommendations-template">
            <div class="col-md-4 col-sm-4 col-xs-12 recommendation">
                <a href="{{ProductDetailsUrl}}">
                    <div class="image"><img src="/Admin/Public/GetImage.ashx?Image={{ImageUrlLarge}}&amp;width=200" width="200" height="200" /></div>
                    <div class="name">{{Name}}</div>
                </a>
            </div>
        </script>
    </section>
    <script src='@GetValue("Template:BaseUrl")javascripts/Recommendation.js'></script>
    <script>
        window.addEventListener('load', function () {
            try {
                var recommendationsUrl = '@recommendationsUrl',
                Recommendation = Dynamicweb.Recommendation,
                render = function (template, data) {
                    return template.replace(/\{{2}([^}]+)\}{2}/g, function (_, key) {
                        return typeof data[key] != 'undefined' ? data[key] : key;
                    });
                };
                @if (useRecommendationContext) {
      <text>
                var productsQuery = Recommendation.getProductsQuery();

                if (productsQuery) {
                    recommendationsUrl = Recommendation.addQueryString(recommendationsUrl, 'type=item', productsQuery);
                } else {
                    recommendationsUrl = null;
                }
                </text>
}
                if (recommendationsUrl) {
                    Recommendation.loadRecommendations({
                        recommendationsUrl: recommendationsUrl,
                        renderProducts: function (products) {
                            var i, product, content,
                                template = document.getElementById('dynamicweb-recommendations-template').innerHTML.replace(/^\s+/, '').replace(/\s+$/, '')
                            container = document.querySelector('#@elementId .content');
                            if (template && container && products) {
                                content = [];
                                for (i = 0; product = products[i]; i++) {
                                    content.push(render(template, product));
                                }
                                container.innerHTML += content.join('');
                            }

                            var info = document.createElement('pre');
                            info.classList.add('recommendation-info');
                            info.innerHTML = [
                                'Recommendations url (base):   <a href="' + @Newtonsoft.Json.JsonConvert.SerializeObject(GetString("RecommendationsUrlBase")) + '" target="recommendations">' + @Newtonsoft.Json.JsonConvert.SerializeObject(GetString("RecommendationsUrlBase")) + '</a>',
                                'Recommendations url:          <a href="' + @Newtonsoft.Json.JsonConvert.SerializeObject(GetString("RecommendationsUrl")) + '" target="recommendations">' + @Newtonsoft.Json.JsonConvert.SerializeObject(GetString("RecommendationsUrl")) + '</a>',
                                'Computed recommendations url: <a href="' + recommendationsUrl + '" target="recommendations">' + recommendationsUrl + '</a>',
                            ].join('\n');
                            document.body.appendChild(info);
                        }
                    });
                }
            } catch (ex) {
                ;;; console.debug(ex);
            }
        })</script>
}
